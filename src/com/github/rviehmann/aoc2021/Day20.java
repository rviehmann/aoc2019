package com.github.rviehmann.aoc2021;

public class Day20 {

    private static final String SAMPLE_ENHANCEMENT =


    private static final String SAMPLE_IMAGE =
            "#..#.\n" +
                    "#....\n" +
                    "##..#\n" +
                    "..#..\n" +
                    "..###";

    private static final String REAL_ENHANCEMENT =
            "##..##...#...##.##...##.##..####....##...##.#.######....###.##...##.##....#..#..###..##.##.###.#..##.###.#......##.#####..#...#...#.#.....#.###.#..#######....##.##.#.#.....##.#.##...#...###.####.#.#####...#..#..#######....#..##.....##.##.#####.####.....#...##..#..#.###....#..##.#....##.##..###...##.##.##.####....##.#...#.#.#.###########...###.###.#.#.###..##.######...#..#.##.......##.#.###....#..##....#.#..##..##..###.#...#.##.#..##..##..####.#.##.#.....###.#..####....#..##...##.##..###...#...#..##..#.#..#.";

    private static final String REAL_IMAGE =
            "##.#.#..#..#####.#####.#.#..###...##.##..####.#####.##.#.#.##....##..##...#..##..####...##.#.#.##...\n" +
                    "#.#..#.#.##.##......##..##.#.##...##.#.#...##.##...###.##.##.#...##.###....#..#..######..####..#####\n" +
                    "...#.#.##.#.#......##.#.###..#.###......#...#.#.#..#.###..#..######...#.#..#...###.####.########.##.\n" +
                    "...##....#...##...####...#.#...##.#...##..##.#.####..#.##..#..#......##....###.#.#..####.#...###....\n" +
                    "..####.#..#.....#....##.#.#...#..#.######.##.###..###..#.##...#..##.#.#.##.######..######.##.####.##\n" +
                    "##.##.##.#.#.##.#................#....#..######.....#.....##.###.#..#.###.###.#..###.#.#...##.#..###\n" +
                    ".#..#.....##.###...#..###.###..#..#######.#.....##..#.#..###.#.#.#.#..###.#.#......#.##.#.###..#.##.\n" +
                    "#..##########..#.#..###.##.#.#..#######...#..###.#..#.....#...#...#.#....#...##....#..####.####.#..#\n" +
                    ".####..#.#....###..###.##.....####.##.#.#..######.......#########.#..###.###.#####...##..###..##.###\n" +
                    "...##.##.##...#.#..#..###..##.#.###..#.##.#.....####.#....########.#.#..#.#.##....######...#......#.\n" +
                    "...#...##.#.##....##.#..####..##.###.#.#.###.....###.#...###..#...#.#...#.#..#...#.#.#######.##.##.#\n" +
                    "...##.##.#.#.....###.#.###.#.#.#..##...##...###...##.###..#.#...#....#.###.#....##....#...#.##..##..\n" +
                    ".#..##.#.#..#..###.#.##..###..#.#..#.#...#.#..##..#####.#..#....#.#.#..#.####..#.#.#..###.....#.##..\n" +
                    ".#....##.##....#..###..####.#...###..#.#..###.##.##.#..##.#.##....##..###.##..#..###.###.#.#.##..#.#\n" +
                    "..###.##.##..###..##.##.#.#..#.##.#.#..###......#.##.#.##......#.####.#..##.####.#...#..###.#..##.##\n" +
                    ".##...####.#....###......#..##.#.#.##.####....#.##.#.#..#####..#...##..#..##............#..##..#...#\n" +
                    "####.#.....###.##.#...##.#.#..........#.....#.#..#......#....#######..#.#########.#..###.......###.#\n" +
                    "#.#.##...##.#..#.#.....##..#.####.....######....##.#####...#.#...##.##.###....###.#..##.##.#...##.#.\n" +
                    ".#.#######..#.##.###.##.#.###...#.#####.#.....##........##..##..###.#...###.####...##..#.######..#..\n" +
                    "#.####.###.##..##..#####..#.#..#..##........##.#.....#...##.#...#...##..##...##..##.#.#########.#.##\n" +
                    "##..#.##...###.##.#.###.#...###..#.#..#.#..#.#...###..#.###...#######.#...#.#....#..###..#...####...\n" +
                    "#.#..##..#..####.#.#.#..#..#.#.#...#######.##.#.####.#.#..######.#...#.#.#....#.#...#.#.#..#..######\n" +
                    "#######.##..##.#..###..#..#............#...###...####..#........#####.########..##.##..##.#.#.....#.\n" +
                    "#..#.###.#..#..#.#..##.##.#..#.####.##..#..###.#.#.#.#...#.###..##.###.###.####........#...#####.##.\n" +
                    ".....#.........#.#..#..#.##.....#####.###.##.#.#...##.##..#.#.#.######..#####..#.#..##.#####......#.\n" +
                    "#..#.##..##......##....##.####.#.#.##..#.##.#..#...####..##..####.####...##.###.....#...##.#.#######\n" +
                    "###.####.#..##...###.##.#..###.#..#....##....#..#..#...#.#.#.#.#.####.#...#.#.##..........#####..###\n" +
                    "#.#..####.##..#.##.###...##.#..#..##.#..#.##.##..#..###..##......#.##.####..##.#.##.##.##..#..#.###.\n" +
                    "..##.###..#..#....###.....#..#...#..#.#..######.#####.##.##.........#.###.#...#..#.##......#.#.#..##\n" +
                    "..###.....####.#.##..###.###..##..#..###.##..#....#.#.##.#####.#...#..##.##.###.##...#..#####..#.###\n" +
                    ".#.#.##.#..##......#..#########...#.#.##.###....###.###.##.......#######..#..####...##.#.#......##.#\n" +
                    "..###..##..#.#.##.#..###.#..##..#######...#...#.#.##.##....#.#.#.##..#..####.##.#....###...#.....#.#\n" +
                    "...##..#.#.#...##.##.##.#######.#..###...#....#..##......##...#.##.##.####...#.#.#.#...##.#.#.....#.\n" +
                    "###...##.#....###..###....##..#.###.#.#..#.#..#.#.#....##.##....##.######.####.#..####..##....#..###\n" +
                    "##.#.###..##.######.#.....#.##..#.#.#.#.#...##..##....##.###..##.#..#.#.#..###..##.#.###.###.#.##...\n" +
                    ".#.#.##....#...#####.#.##.......#..#...##.##.#.#.###.#.##.##.#######.#######...###..#..###.####..#.#\n" +
                    "###..####..#####..#.#..##..#.#.##.....#.#...#..#.#..#.###.#..##.#.#...##.#...#.##..####..##....####.\n" +
                    ".###.#..##...#.##.#...#.##..#.#.##.###.###..###.#####....####.#..##.#.#.#.##..#.#.#....#.#.#.#.#..##\n" +
                    ".###..#.....##.#..####.#...##...##..#....##..##..##.#..##.#...###.#.#.#.##.#..#..#.####...##.#..####\n" +
                    "#..######.###...##......#...#.#.###.#..#.###..#.####.#..#......###.##....##.###.####..####.#.#.##...\n" +
                    ".###.####.#.###...#.###.#.........#.#.#..###.##..##.###...####..#.#.##...#.###.....###.#..##..#.#...\n" +
                    "..#.#####..##.#.##...#...#......#.##....####.#..####.##.####..#.#....######...#.#.#.##.###.##..#...#\n" +
                    "#..#.#....####.#..#.....#...####....##.#.##..#....#..##..##.#...###.##....##.##..###..#.##..#####..#\n" +
                    "#####.####.#####.##.##.####.#.####.#..#.###..#.#..#..#....#..##...#....#.#..####..###..##.##...####.\n" +
                    ".......###.#.#.##....#...#..#......#...##.##..#....#####.##.#..#####..#..#.#.##.##.#..#.####..#.....\n" +
                    "..####.###.###...##...#..#....#....###.####....#.#..###...####.####.#.#....##...##.#.####.#....##.#.\n" +
                    "....#.##.#.##..#.#...##.####.#...#.#.##....#.##.#....#...####.#.###.##..#...#..#.##....##..#.....###\n" +
                    ".....#.####.##.#.##.###......#...##..#..##...#..###.##..####.#...#.#..#..#.#.##...#.##.#####.##.##.#\n" +
                    "#.#####....##.#.##..#..##.####.#.#.#####.######.###.#.##.##..##..####..#.#..###..#.###.#..##..####..\n" +
                    ".##.#.#...####....##.#.###.###..#......###.##.####..#####.#.#.#.....####..#.....##......##....###..#\n" +
                    ".#..#..#.#####.#.#.#..#..#...##...#####.###.#.#..##.###.###.....#.#.....##...###.###..##.....#..##.#\n" +
                    "#.#.####...#.###...###..#.###.#..##.###.#..#.##.#.#..##..##.#...##.#####.####.#..#...##...####.#..##\n" +
                    "##.##.###..##..#..#..###..#.##.#.#..####....#..#..#...#.#..##.#.#..#..#..##..####.#.##......#...#..#\n" +
                    "..#####.##...#..#.###....#.#.###..#...##....###.#####.#####.##.##.###....#..##.#.##.##.#...####..###\n" +
                    ".#.####.#..##..#######...##.#..#.####..#....###...#....#.#....#...#.#..#.####.#.#.#....#.....#.##.##\n" +
                    ".....##.###......##.##....##..##.....##.##....#.##.###....#..#.#...#..####....##.#.#.##..##.##.##...\n" +
                    "#...####.#.####.###.##..##...##.#....###.#...##.###...##.#.####.##.#..#..#..#..#....#.#.##.#......#.\n" +
                    "#.#...#.#..#.#..######.##....##.###..##.#.#..#..######..#.##.#....##.#...#...##......#...#.#..##...#\n" +
                    ".#...##.....##..#.##.###.##..#..###.#..#.#.......#####.####...#.#......###.###..#....##..#..#..#.##.\n" +
                    "#...#####..........#.#..##.#...#.###.##..#.#.#.##..###.###.....#..##.....#....#.##.###.##.#..#####..\n" +
                    ".#.......#.#.....####.##..##.#...#..##....######.#.#.##....#...#..#.###.#....#...#..#.##.######...#.\n" +
                    "##.#.#####.##..##....#.###..#..#.#.....##.....#..#.#....#.#...##...#...###.###.....###..##.##.#.#..#\n" +
                    "...##...####.####..##..###.........#.###.###..#..#.....#.##.####.##..##.######.#.#...#.#..##.####.#.\n" +
                    "..######.#....####.##..#.#.##.#....###..########..#.#..####.##.#..#......##.#..######.#.#.#.#.#..###\n" +
                    ".###.#..####..#..#...##...#####.#.###.###.##..##.#...#.#..#...#.####.##.#.#####.##.##.#.#.#######...\n" +
                    "###..##..######...#...#######...####..###..##..#..........####.#..#..##.#..##..#####..##.#..#.#..##.\n" +
                    ".#####....###.#.....##..#....###..##.#..#...##....####..#.###.....##...#.##....######..##..#.....###\n" +
                    "#..##.#.####.#..#.#..#..#.#..#.#...#.####...##.#.#####.#..#...###.######.....#.####..#..#####...#..#\n" +
                    "#...#..###....####..#.#..######.#..#.#.##...#..####...#.#....###.###.#.##.#####.#.....####...#####..\n" +
                    "##..#.#..#.......##..####..#.##.#######...#.###.#..##.##.#......#.##.###.#..##.#.#.#####...#########\n" +
                    ".....#....#...#..##.#....##..##...###..###.###########....#.#.#..##....#.#.##..#.####..#.####.###.##\n" +
                    ".#.##.###...#.#.##.###.######..#..##...####..###..#..#.....###.#.#....##..###.#.##....#..####.#...#.\n" +
                    "#..#..#######.#.#..#.#.###..##.#....#..#...#.#.#.###.#..#.#..#..#####..#.#.#...##.#..#..#..##..##...\n" +
                    "...#.##...###..##..#.######.#.###..##.######.#.#.###..#.#..###.#.##.....####.#...#.#.#.###.##...#..#\n" +
                    "#.#.#...#.#....#.#...#...#...#.#.#..###...##..#.......#...#.######.##....#...###..#..#####.#.......#\n" +
                    "#...##.#..##.##.#.#......#.#..#.######.#...#.##.###...#.#...#..###....##.###.#....#..##...######...#\n" +
                    ".#...####..#####....#..#.##.##...##.#..#..##.#...#..###........#........#.####..#.#.####.#.#.#..####\n" +
                    ".##.##..#.##..#####.#.##.##.#.####.#....#..#..#..##.###.##..#.##.##....###.#..#..#.#..#...#.##...##.\n" +
                    ".##...##.#.#....####...#.#.##.####..#..#####.#..#....#..#....####.#.###.##.#....##.####.#.##.#####.#\n" +
                    ".#.#.####...######.#...#...#.#..##.#..##.#.###.##.#.#..##..#.###.##.###.###..###.###...#.##.#..####.\n" +
                    ".###.#..####....####.##..##.#.#.#..##.....###...##.###.##....##.#.###..######..####...###.#.#..#...#\n" +
                    "#.###.#..#...#.##.#...#.#.#.##.###.#.#..######.#..##.#.####.##..#..###.######.##..###..#.....##...##\n" +
                    "#...#####...#...#.##.#######..###.#..###.##...#..#...##.#.###.##.##....##..####.#..#...#.##.#.#####.\n" +
                    "...#...#####....##..#.##.###.#.####..#.##...##.###.......#.##.###...###....####..#.#####.##.#..#..#.\n" +
                    "#......##....##...##.#..##...#.#.##.##..#...#.###..#......#..###.###.#..#.#.#.####..#.###.#..##..##.\n" +
                    "....#.##.#......#####..#.###...#..#..#.##......##.##..####.#..#....###.####..#...##.#.#.##..##.###.#\n" +
                    "......#.##..#.......#.#....#...#..#.#......#.....##..#....####.#####....##.###......###.####.##..#.#\n" +
                    "..#..#..###.#.#####.#..#.####...##.....#.#...#.#..#.#..##......#.....##.....#...#.##.##..##..#..#..#\n" +
                    "#..#..#.##..#.#.#.#.#...###....#..#.#...##.#.#..#######.#..#.##...##..#..###.#.##.###...#.###..#...#\n" +
                    ".##.##.#..#.#..##.#.#..##.#...###...#...#...####..#..#.#.##..##.##.##.##.#..##...###...#..#.#.##....\n" +
                    "#..#.#..#.#..####..#.#......##.####.##.#..####.##..###.#.##...##.#.#.#####..###....#.#..#.#.#.#.##.#\n" +
                    "..##.#....#...#.#..#.##...#....#.###..#.#...#.#.###...#..#.#####.#......##..#..#.###.###.....#.#..#.\n" +
                    "###.....###...##.#........#..###.##..#.##.#.#.####.#.###...###..#.#.#####.#..#....#.#.##.#..######.#\n" +
                    "#.#..###.#.####..##.....#.#..########.#.####.....##..#.#.#..##...#.#.###...#.........###..##.#.##...\n" +
                    "#...##...##.###.##.###..#.##.#.##...#####...###.##....##.#.#.....#.....#.###.#.######.#....#.#..#..#\n" +
                    ".##....#..#...#.#...###.#..#...###..#...##....#.#..#.#..##..##.##.##.#...#.#..#.##..#.#.##.##.##.#.#\n" +
                    ".#...#..#.#.##.####.##..##.....##.##.##..#...#....#.#..##..##..#...###..#.###.##..#....##.#.#....###\n" +
                    "...#....#.####..#..#.#.#.###..###.#.#####.##.###.....#..#.##.#.###..#.##.##...#...#..#..##.#.##.#...\n" +
                    "...#...#...#...##..#....#..##..###.#.##.####..#.###..##...#....#####..##....######.####...#.....##.#\n" +
                    "#.#####.###.#.#.##..#...###.##..#..#.####.#.##.###.#..#...##.##..#.##.##..##....##..#..##..#.#.####.";

    private static final String[] SAMPLE_IMAGE_AS_LINE_ARRAY = SAMPLE_IMAGE.split("\\R");
    private static final String[] REAL_IMAGE_AS_LINE_ARRAY = REAL_IMAGE.split("\\R");
    private static final char BLACK = '.';
    private static final char WHITE = '#';

    /**
     * This method has the job to simulate an endless input image, by giving back a black pixel if we don't have real data for the pixel.
     *
     * @param image
     * @param x                         (0,0) is per definition the top left corner of the image. Negative values are possible.
     * @param y                         (0,0) is per definition the top left corner of the image. Negative values are possible.
     * @param enhancement               The enhancement data structure.
     * @param isOddNumberOfEnhancements When counting starts with one, so for example, the first enhancement. So for each subsequent enhancement, this should be negated if compared to the last time.
     * @return Whether the pixel is black or white.
     */
    private static char getPixel(String[] image, int x, int y, String enhancement, boolean isOddNumberOfEnhancements) {
        int sizeX = image[0].length();
        int sizeY = image.length;
        if ((x < 0 || y < 0)
                || (x >= sizeX || y >= sizeY)) {
            if (isOddNumberOfEnhancements) {
                return enhancement.charAt(0) == WHITE
                        ? enhancement.charAt(511) // Bin 111111111
                        : BLACK;
            } else {
                return enhancement.charAt(0); // Bin 000000000
            }
        }
        return image[y].charAt(x);
    }

    private static int getIntValueForMiddlePixel(String[] image, int middleX, int middleY, String enhancement, boolean isOddNumberOfEnhancements) {
        int intValue = 0;
        for (int y = middleY - 1; y <= middleY + 1; y++) {
            for (int x = middleX - 1; x <= middleX + 1; x++) {
                intValue *= 2;
                if (getPixel(image, x, y, enhancement, isOddNumberOfEnhancements) == WHITE) {
                    intValue += 1;
                }
            }
        }
        return intValue;
    }

    private static String[] enhanceImage(String[] image, String enhancement, boolean isOddNumberOfEnhancements) {
        // The image is growing two rows of pixels to the top, bottom, left and right each.
        int newSizeX = image[0].length() + 4;
        int newSizeY = image.length + 4;
        String[] newImage = new String[newSizeY];
        for (int y = 0; y < newSizeY; y++) {
            StringBuilder sb = new StringBuilder();
            for (int x = 0; x < newSizeX; x++) {
                int intValue = getIntValueForMiddlePixel(image, x - 2, y - 2, enhancement, isOddNumberOfEnhancements);
                sb.append(enhancement.charAt(intValue));
            }
            newImage[y] = sb.toString();
        }
        return newImage;
    }

    private static int countPixels(String[] image, char color) {
        int sizeX = image[0].length();
        int count = 0;
        for (String row : image) {
            for (int x = 0; x < sizeX; x++) {
                if (row.charAt(x) == color) {
                    count++;
                }
            }
        }
        return count;
    }

    private static void printImage(String[] image) {
        System.out.println("˜".repeat(image[0].length()));
        for (String row : image) {
            System.out.println(row);
        }
        System.out.println("˜".repeat(image[0].length()));
    }

    public static void testWithExamplesForPuzzle1() {
        System.out.println("### Day 20: Examples for puzzle 1 ###");
        String[] image = SAMPLE_IMAGE_AS_LINE_ARRAY;
        // printImage(image);
        for (int i = 1; i <= 2; i++) {
            image = enhanceImage(image, SAMPLE_ENHANCEMENT, (i % 2) == 1);
            // printImage(image);
        }
        System.out.println("Number of white pixels after two enhancement iterations: " + countPixels(image, WHITE));
    }

    public static void testWithExamplesForPuzzle2() {
        System.out.println("### Day 20: Examples for puzzle 2 ###");
        String[] image = SAMPLE_IMAGE_AS_LINE_ARRAY;
        // printImage(image);
        for (int i = 1; i <= 50; i++) {
            image = enhanceImage(image, SAMPLE_ENHANCEMENT, (i % 2) == 1);
            // printImage(image);
        }
        System.out.println("Number of white pixels after fifty enhancement iterations: " + countPixels(image, WHITE));
    }

    public static long doPuzzle1() {
        String[] image = REAL_IMAGE_AS_LINE_ARRAY;
        // printImage(image);
        for (int i = 1; i <= 2; i++) {
            image = enhanceImage(image, REAL_ENHANCEMENT, (i % 2) == 1);
            // printImage(image);
        }
        return countPixels(image, WHITE);
    }

    public static long doPuzzle2() {
        String[] image = REAL_IMAGE_AS_LINE_ARRAY;
        // printImage(image);
        for (int i = 1; i <= 50; i++) {
            image = enhanceImage(image, REAL_ENHANCEMENT, (i % 2) == 1);
            // printImage(image);
        }
        return countPixels(image, WHITE);
    }
}
